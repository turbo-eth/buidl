{
  "name": "erc20-balance",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "erc20-balance.tsx",
      "content": "import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport defaultTokenList from \"@/data/uniswap-default.tokenlist.json\"\nimport { formatUnits } from \"viem\"\nimport { useChainId } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { useErc20BalanceOf, useErc20Decimals } from \"./erc20-wagmi\"\nimport { TokenList } from \"./types\"\nimport { findTokenByAddressFromList } from \"./utils/find-token-by-address-from-list\"\n\nexport type Erc20BalanceProps = React.HTMLAttributes<HTMLElement> & {\n  address: `0x${string}`\n  account: `0x${string}`\n  tokenList?: TokenList\n  chainId?: number\n}\n\nexport const Erc20Balance = ({\n  className,\n  chainId,\n  address,\n  account,\n  tokenList = defaultTokenList,\n}: Erc20BalanceProps) => {\n  const classes = cn(className)\n  const chainIdDefault = useChainId()\n\n  const [decimals, setDecimals] = React.useState<number | undefined>()\n  const [tokenNotInList, setTokenNotInList] = useState<boolean>()\n  React.useEffect(() => {\n    const token = findTokenByAddressFromList(tokenList, address)\n    if (!token) {\n      setTokenNotInList(true)\n    }\n    if (token) {\n      setDecimals(token.decimals)\n    }\n  }, [address, tokenList])\n\n  useEffect(() => {}, [])\n\n  const { data: dataErc20Decimals, isSuccess: isSuccessErc20Decimals } =\n    useErc20Decimals({\n      chainId: chainId || chainIdDefault,\n      address,\n      enabled: tokenNotInList,\n    })\n\n  useEffect(() => {\n    if (isSuccessErc20Decimals && dataErc20Decimals) {\n      setDecimals(dataErc20Decimals)\n    }\n  }, [dataErc20Decimals, isSuccessErc20Decimals])\n\n  const { data, isSuccess } = useErc20BalanceOf({\n    chainId: chainId || chainIdDefault,\n    address,\n    // @ts-ignore\n    args: account,\n    watch: true,\n    enabled: !!decimals,\n  })\n\n  if (!data || !isSuccess || !decimals)\n    return <span className={className}>0</span>\n\n  return <div className={classes}>{formatUnits(data, decimals).toString()}</div>\n}\n"
    }
  ],
  "folder": "erc20",
  "type": "components:buidl"
}