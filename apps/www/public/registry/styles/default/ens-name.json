{
  "name": "ens-name",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "ens-name.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useAccount, useEnsName } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Address } from \"@/registry/default/buidl/address\"\n\nimport { Skeleton } from \"../ui/skeleton\"\n\ninterface EnsNameProps extends React.HTMLAttributes<HTMLSpanElement> {\n  address?: `0x${string}`\n}\n\nconst EnsName = React.forwardRef<HTMLSpanElement, EnsNameProps>(\n  ({ address, className, ...props }, ref) => {\n    const { address: connectedAddress } = useAccount()\n    const selectedAddress = address ?? connectedAddress\n\n    const { data, isLoading, isSuccess } = useEnsName({\n      chainId: 1,\n      address: selectedAddress,\n      enabled: !!selectedAddress,\n    })\n\n    if (isSuccess && data) {\n      return (\n        <span ref={ref} className={className} {...props}>\n          {data}\n        </span>\n      )\n    }\n\n    if (isLoading) {\n      return <Skeleton className={cn(\"h-6 w-32\", className)} {...props} />\n    }\n\n    return (\n      <Address address={selectedAddress} className={className} {...props} />\n    )\n  }\n)\n\nEnsName.displayName = \"EnsName\"\n\nexport { EnsName }\n"
    }
  ],
  "type": "components:buidl"
}