{
  "name": "erc20-image",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "erc20-image.tsx",
      "content": "import { useEffect, useState } from \"react\"\nimport Image from \"next/image\"\nimport defaultTokenList from \"@/data/uniswap-default.tokenlist.json\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { TokenList } from \"./types\"\nimport { findTokenByAddressFromList } from \"./utils/find-token-by-address-from-list\"\n\nexport type Erc20ImageProps = React.HTMLAttributes<HTMLElement> & {\n  address: `0x${string}`\n  tokenList?: TokenList\n  chainId?: number\n  logoURIDefault?: string\n}\n\nexport const Erc20Image = ({\n  className,\n  address,\n  logoURIDefault = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\",\n  tokenList = defaultTokenList,\n}: Erc20ImageProps) => {\n  const classes = cn(className)\n\n  const [tokenImage, setTokenImage] = useState<string | undefined>()\n  const [tokenName, setTokenName] = useState<string | undefined>()\n  useEffect(() => {\n    const token = findTokenByAddressFromList(tokenList, address)\n    if (!token) {\n      setTokenImage(logoURIDefault)\n      setTokenName(\"Unknown Token\")\n    }\n    if (token) {\n      let tokenImage = token.logoURI\n      if (tokenImage?.startsWith(\"ipfs://\")) {\n        tokenImage = tokenImage.replace(\n          \"ipfs://\",\n          \"https://gateway.ipfs.io/ipfs/\"\n        )\n      }\n      setTokenImage(tokenImage)\n      setTokenName(token.name)\n    }\n  }, [address, logoURIDefault, tokenList])\n\n  if (!tokenImage || !tokenName) return null\n\n  return (\n    <Image\n      alt={tokenName}\n      height={48}\n      width={48}\n      className={classes}\n      src={tokenImage}\n    />\n  )\n}\n"
    }
  ],
  "folder": "erc20",
  "type": "components:buidl"
}