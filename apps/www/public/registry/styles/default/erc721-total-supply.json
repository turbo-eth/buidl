{
  "name": "erc721-total-supply",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "erc721-total-supply.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useContractRead } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Skeleton } from \"@/registry/default/ui/skeleton\"\n\nconst erc721TotalSupplyAbi = [\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n] as const\n\nconst ErrorMessage = ({ error }: { error: Error | null }) => {\n  return (\n    <div className={cn(\"break-words text-sm font-medium text-red-500\")}>\n      {error?.message ?? \"Error while fetching ERC721 data\"}\n    </div>\n  )\n}\n\nexport type Erc721TotalSupplyProps = React.HTMLAttributes<HTMLSpanElement> & {\n  address: `0x${string}`\n  chainId?: number\n}\n\nconst Erc721TotalSupply = React.forwardRef<\n  HTMLSpanElement,\n  Erc721TotalSupplyProps\n>(({ chainId, address, ...props }, ref) => {\n  const { data, isLoading, isError, error } = useContractRead({\n    address,\n    abi: erc721TotalSupplyAbi,\n    functionName: \"totalSupply\",\n    chainId,\n  })\n\n  if (isLoading) {\n    return <Skeleton className=\"h-6 w-16\" {...props} />\n  }\n\n  if (isError) {\n    return <ErrorMessage error={error} />\n  }\n\n  if (data === undefined) {\n    return null\n  }\n\n  return (\n    <span ref={ref} {...props}>\n      {data.toString()}\n    </span>\n  )\n})\n\nErc721TotalSupply.displayName = \"Erc721TotalSupply\"\n\nexport { Erc721TotalSupply }\n"
    }
  ],
  "folder": "erc721",
  "type": "components:buidl"
}