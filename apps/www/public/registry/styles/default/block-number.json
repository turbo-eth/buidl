{
  "name": "block-number",
  "dependencies": [
    "wagmi"
  ],
  "registryDependencies": [
    "skeleton",
    "error-message"
  ],
  "files": [
    {
      "name": "block-number.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useBlockNumber } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ErrorMessage } from \"@/registry/default/buidl/error-message\"\nimport { Skeleton } from \"@/registry/default/ui/skeleton\"\n\ninterface BlockNumberProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n  chainId?: number\n  displayLoading?: boolean\n  displayError?: boolean\n}\n\nconst BlockNumber = React.forwardRef<HTMLDivElement, BlockNumberProps>(\n  (\n    {\n      chainId,\n      className,\n      displayError = true,\n      displayLoading = true,\n      ...props\n    },\n    ref\n  ) => {\n    const { data, isLoading, isSuccess, isError, error } = useBlockNumber({\n      chainId,\n    })\n\n    if (isLoading && displayLoading)\n      return <Skeleton className={cn(\"h-6 w-24\", className)} {...props} />\n\n    if (isError && displayError)\n      return (\n        <ErrorMessage\n          defaultErrorMessage=\"Error while fetching block number data\"\n          error={error}\n        />\n      )\n\n    if (isSuccess) {\n      return (\n        <div ref={ref} className={className} {...props}>\n          {data?.toString()}\n        </div>\n      )\n    }\n\n    return null\n  }\n)\n\nBlockNumber.displayName = \"BlockNumber\"\n\nexport { BlockNumber }\n"
    }
  ],
  "type": "components:buidl"
}