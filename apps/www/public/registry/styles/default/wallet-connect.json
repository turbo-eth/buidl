{
  "name": "wallet-connect",
  "dependencies": [
    "wagmi"
  ],
  "registryDependencies": [
    "button",
    "dialog"
  ],
  "files": [
    {
      "name": "wallet-connect.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useAccount, useConnect, type Connector } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button, ButtonProps } from \"@/registry/default/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/registry/default/ui/dialog\"\n\nconst WalletConnect = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ children, className, ...props }, ref) => {\n    const { address } = useAccount()\n    const { connectors } = useConnect()\n\n    if (address) {\n      return <div className={className}>{address}</div>\n    }\n\n    return (\n      <Dialog>\n        <DialogTrigger>\n          <Button ref={ref} className={className} {...props}>\n            {children ?? \"Connect Wallet\"}\n          </Button>\n        </DialogTrigger>\n        <DialogContent className=\"flex w-full flex-col\">\n          <DialogHeader>\n            <DialogTitle>Connect Wallet</DialogTitle>\n            <hr className=\"my-6\" />\n          </DialogHeader>\n          <div className=\"flex max-w-full flex-col items-center gap-y-3 py-3\">\n            {connectors.map((connector, index) => (\n              <WalletPreview key={index} connector={connector} />\n            ))}\n          </div>\n        </DialogContent>\n      </Dialog>\n    )\n  }\n)\n\nWalletConnect.displayName = \"WalletConnect\"\n\nconst WalletPreview = React.forwardRef<\n  HTMLButtonElement,\n  Omit<ButtonProps, \"onClick\"> & {\n    connector: Connector\n  }\n>(({ className, connector, ...props }, ref) => {\n  const { connect, isLoading, isError, error } = useConnect()\n\n  const handleConnect = () => {\n    connect({ connector })\n  }\n\n  return (\n    <Button\n      ref={ref}\n      className={cn(\"flex h-16 w-full flex-col justify-center\", className)}\n      variant={\"outline\"}\n      disabled={isLoading}\n      onClick={handleConnect}\n      {...props}\n    >\n      <h3 className=\"text-lg font-normal\">{connector.name}</h3>\n      {isLoading && (\n        <p className=\"text-sm text-neutral-400\">\n          Accept the connection request in your wallet\n        </p>\n      )}\n      {isError && (\n        <div className=\"w-full items-center gap-x-2 overflow-auto break-words text-xs text-red-500\">\n          {error?.message ?? \"Error while connecting wallet\"}\n        </div>\n      )}\n    </Button>\n  )\n})\n\nWalletPreview.displayName = \"WalletPreview\"\n\nexport { WalletConnect, WalletPreview }\n"
    }
  ],
  "type": "components:buidl"
}