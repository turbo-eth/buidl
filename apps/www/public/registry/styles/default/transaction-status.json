{
  "name": "transaction-status",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "transaction-status.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useChainId, useWaitForTransaction } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Skeleton } from \"@/registry/default/ui/skeleton\"\n\nconst ErrorMessage = ({ error }: { error: Error | null }) => {\n  return (\n    <div className={cn(\"break-words text-sm font-medium text-red-500\")}>\n      {error?.message ?? \"Error while fetching ERC721 data\"}\n    </div>\n  )\n}\n\nconst TransactionStatus = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    hash: `0x${string}`\n    chainId?: number\n  }\n>(({ chainId: selectedChainId, children, className, hash, ...props }, ref) => {\n  const currentChainId = useChainId()\n\n  const { isLoading, isSuccess, isError, error, isFetching } =\n    useWaitForTransaction({\n      hash: hash,\n      chainId: selectedChainId ?? currentChainId,\n    })\n\n  if (isFetching)\n    return <Skeleton className={cn(\"h-6 w-52\", className)} {...props} />\n\n  if (isError) return <ErrorMessage error={error} />\n\n  return (\n    <>\n      <div\n        ref={ref}\n        className={cn(\"flex flex-col items-center\", className)}\n        {...props}\n      >\n        {(isLoading || isSuccess) && (\n          <>\n            {isLoading && \"Processing transaction...\"}\n            {isSuccess && \"Transaction successful!\"}\n            {children}\n          </>\n        )}\n      </div>\n    </>\n  )\n})\n\nTransactionStatus.displayName = \"TransactionStatus\"\n\nexport { TransactionStatus }\n"
    }
  ],
  "type": "components:buidl"
}