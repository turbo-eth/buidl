{
  "name": "transaction-status",
  "dependencies": [
    "wagmi"
  ],
  "registryDependencies": [
    "skeleton",
    "error-message"
  ],
  "files": [
    {
      "name": "transaction-status.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useChainId, useWaitForTransaction } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ErrorMessage } from \"@/registry/default/buidl/error-message\"\nimport { Skeleton } from \"@/registry/default/ui/skeleton\"\n\nconst TransactionStatus = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    hash: `0x${string}`\n    chainId?: number\n    displayLoading?: boolean\n    displayError?: boolean\n  }\n>(\n  (\n    {\n      chainId: selectedChainId,\n      children,\n      className,\n      hash,\n      displayLoading = true,\n      displayError = true,\n      ...props\n    },\n    ref\n  ) => {\n    const currentChainId = useChainId()\n\n    const { isLoading, isSuccess, isError, error, isFetching } =\n      useWaitForTransaction({\n        hash: hash,\n        chainId: selectedChainId ?? currentChainId,\n      })\n\n    if (displayLoading && isFetching)\n      return <Skeleton className={cn(\"h-6 w-52\", className)} {...props} />\n\n    if (displayError && isError)\n      return (\n        <ErrorMessage\n          defaultErrorMessage=\"Error while fetching transaction status data\"\n          error={error}\n          {...props}\n        />\n      )\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\"flex flex-col items-center\", className)}\n        {...props}\n      >\n        {isLoading && \"Processing transaction...\"}\n        {isSuccess && \"Transaction successful!\"}\n        {children}\n      </div>\n    )\n  }\n)\n\nTransactionStatus.displayName = \"TransactionStatus\"\n\nexport { TransactionStatus }\n"
    }
  ],
  "type": "components:buidl"
}