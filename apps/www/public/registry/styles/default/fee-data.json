{
  "name": "fee-data",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "fee-data.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useFeeData } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Skeleton } from \"@/registry/default/ui/skeleton\"\n\ninterface FeeDataProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n  chainId?: number\n  displayLoading?: boolean\n  displayError?: boolean\n}\n\nconst ErrorMessage = ({ error }: { error: Error | null }) => {\n  return (\n    <div className={cn(\"break-words text-sm font-medium text-red-500\")}>\n      {error?.message ?? \"Error while fetching fee data\"}\n    </div>\n  )\n}\n\nconst GasPrice = React.forwardRef<HTMLDivElement, FeeDataProps>(\n  (\n    {\n      chainId,\n      className,\n      displayError = true,\n      displayLoading = true,\n      ...props\n    },\n    ref\n  ) => {\n    const { data, isLoading, isSuccess, isError, error } = useFeeData({\n      chainId,\n    })\n\n    if (isLoading && displayLoading)\n      return <Skeleton className={cn(\"h-6 w-16\", className)} {...props} />\n\n    if (isError && displayError) return <ErrorMessage error={error} />\n\n    if (isSuccess) {\n      return (\n        <div ref={ref} className={className} {...props}>\n          {data?.formatted.gasPrice}\n        </div>\n      )\n    }\n\n    return null\n  }\n)\n\nGasPrice.displayName = \"GasPrice\"\n\nconst MaxPriorityFeePerGas = React.forwardRef<HTMLDivElement, FeeDataProps>(\n  (\n    {\n      chainId,\n      className,\n      displayError = true,\n      displayLoading = true,\n      ...props\n    },\n    ref\n  ) => {\n    const { data, isLoading, isSuccess, isError, error } = useFeeData({\n      chainId,\n    })\n\n    if (isLoading && displayLoading)\n      return <Skeleton className={cn(\"h-6 w-16\", className)} {...props} />\n\n    if (isError && displayError) return <ErrorMessage error={error} />\n\n    if (isSuccess) {\n      return (\n        <div ref={ref} className={className} {...props}>\n          {data?.formatted.maxPriorityFeePerGas}\n        </div>\n      )\n    }\n\n    return null\n  }\n)\n\nMaxPriorityFeePerGas.displayName = \"MaxPriorityFeePerGas\"\n\nconst MaxFeePerGas = React.forwardRef<HTMLDivElement, FeeDataProps>(\n  (\n    {\n      chainId,\n      className,\n      displayError = true,\n      displayLoading = true,\n      ...props\n    },\n    ref\n  ) => {\n    const { data, isLoading, isSuccess, isError, error } = useFeeData({\n      chainId,\n    })\n\n    if (isLoading && displayLoading)\n      return <Skeleton className={cn(\"h-6 w-16\", className)} {...props} />\n\n    if (isError && displayError) return <ErrorMessage error={error} />\n\n    if (isSuccess) {\n      return (\n        <div ref={ref} className={className} {...props}>\n          {data?.formatted.maxFeePerGas}\n        </div>\n      )\n    }\n\n    return null\n  }\n)\n\nMaxFeePerGas.displayName = \"MaxFeePerGas\"\n\nexport { GasPrice, MaxFeePerGas, MaxPriorityFeePerGas }\n"
    }
  ],
  "type": "components:buidl"
}