{
  "name": "address",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "address.tsx",
      "content": "import { HTMLAttributes } from \"react\"\nimport Link from \"next/link\"\nimport { Copy } from \"lucide-react\"\nimport { useNetwork, type Address as AddressType } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { toast } from \"../ui/use-toast\"\n\nexport interface AddressProps\n  extends Omit<HTMLAttributes<HTMLElement>, \"children\"> {\n  address: AddressType\n  truncate?: boolean\n  truncateAmount?: number\n  linkEnabled?: boolean\n  copyEnabled?: boolean\n}\n\nexport const Address = ({\n  address,\n  className,\n  truncate,\n  truncateAmount = 4,\n  linkEnabled,\n  copyEnabled,\n  ...props\n}: AddressProps) => {\n  const { chain } = useNetwork()\n  const blockExplorerUrl = chain?.blockExplorers?.default.url\n  const formattedAddress = truncate\n    ? `${address.slice(0, truncateAmount + 2)}...${address.slice(\n        -Number(truncateAmount)\n      )}`\n    : address\n\n  if (linkEnabled && blockExplorerUrl) {\n    const classes = cn(className)\n\n    if (copyEnabled) {\n      return (\n        <span className=\"flex items-center\">\n          <Link\n            className={classes}\n            href={`${blockExplorerUrl}/address/${address}`}\n            {...props}\n          >\n            {formattedAddress}\n          </Link>\n          {copyEnabled && (\n            <button\n              className=\"ml-2 opacity-70 transition-opacity hover:opacity-100\"\n              onClick={async () => {\n                await navigator.clipboard.writeText(address)\n                toast({\n                  title: \"Copied address\",\n                  description: \"The address has been copied to your clipboard.\",\n                })\n              }}\n            >\n              <span className=\"sr-only\">Copy address</span>\n              <Copy size={12} />\n            </button>\n          )}\n        </span>\n      )\n    }\n\n    return (\n      <Link\n        className={classes}\n        href={`${blockExplorerUrl}/address/${address}`}\n        {...props}\n      >\n        {formattedAddress}\n      </Link>\n    )\n  }\n  const classes = cn(className)\n\n  if (copyEnabled) {\n    return (\n      <span className=\"\">\n        <span className={classes}>{formattedAddress}</span>\n        {copyEnabled && (\n          <button\n            className=\"ml-2 opacity-70 transition-opacity hover:opacity-100\"\n            onClick={async () => {\n              await navigator.clipboard.writeText(address)\n              toast({\n                title: \"Copied address\",\n                description: \"The address has been copied to your clipboard.\",\n              })\n            }}\n          >\n            <span className=\"sr-only\">Copy address</span>\n            <Copy size={12} />\n          </button>\n        )}\n      </span>\n    )\n  }\n\n  return <span className={classes}>{formattedAddress}</span>\n}\n"
    }
  ],
  "type": "components:buidl"
}