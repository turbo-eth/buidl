{
  "name": "erc20-decimals",
  "dependencies": [
    "wagmi"
  ],
  "registryDependencies": [
    "skeleton",
    "error-message"
  ],
  "files": [
    {
      "name": "erc20-decimals.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useContractRead } from \"wagmi\"\n\nimport { ErrorMessage } from \"@/registry/default/buidl/error-message\"\nimport { Skeleton } from \"@/registry/default/ui/skeleton\"\n\nconst erc20DecimalsAbi = [\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n] as const\n\nexport type Erc20DecimalsProps = React.HTMLAttributes<HTMLDivElement> & {\n  address: `0x${string}`\n  chainId?: number\n  displayLoading?: boolean\n  displayError?: boolean\n}\n\nconst Erc20Decimals = React.forwardRef<HTMLDivElement, Erc20DecimalsProps>(\n  (\n    { chainId, address, displayLoading = true, displayError = true, ...props },\n    ref\n  ) => {\n    const { data, isLoading, isError, error } = useContractRead({\n      address,\n      abi: erc20DecimalsAbi,\n      functionName: \"decimals\",\n      chainId,\n    })\n\n    if (displayLoading && isLoading) {\n      return <Skeleton className=\"h-6 w-12\" {...props} />\n    }\n\n    if (displayError && isError) {\n      return (\n        <ErrorMessage\n          defaultErrorMessage=\"Error while fetching ERC20 data\"\n          error={error}\n          {...props}\n        />\n      )\n    }\n\n    if (data === undefined) {\n      return null\n    }\n\n    return (\n      <div ref={ref} {...props}>\n        {data}\n      </div>\n    )\n  }\n)\n\nErc20Decimals.displayName = \"Erc20Decimals\"\n\nexport { Erc20Decimals }\n"
    }
  ],
  "folder": "erc20",
  "type": "components:buidl"
}