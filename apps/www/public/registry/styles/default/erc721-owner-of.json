{
  "name": "erc721-owner-of",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "erc721-owner-of.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useContractRead } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Skeleton } from \"@/registry/default/ui/skeleton\"\n\nconst erc721OwnerOfAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n] as const\n\nconst ErrorMessage = ({\n  error,\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & { error: Error | null }) => {\n  return (\n    <div\n      className={cn(\"break-words text-sm font-medium text-red-500\", className)}\n      {...props}\n    >\n      {error?.message ?? \"Error while fetching ERC721 data\"}\n    </div>\n  )\n}\n\nexport type Erc721OwnerOfProps = React.HTMLAttributes<HTMLSpanElement> & {\n  address: `0x${string}`\n  tokenId: number | string | bigint\n  chainId?: number\n}\n\nconst Erc721OwnerOf = React.forwardRef<HTMLSpanElement, Erc721OwnerOfProps>(\n  ({ chainId, address, tokenId, ...props }, ref) => {\n    const { data, isLoading, isError, error } = useContractRead({\n      address,\n      abi: erc721OwnerOfAbi,\n      functionName: \"ownerOf\",\n      args: [BigInt(tokenId)],\n      chainId,\n    })\n\n    if (isLoading) {\n      return <Skeleton className=\"h-6 w-[420px]\" {...props} />\n    }\n\n    if (isError) {\n      return <ErrorMessage error={error} {...props} />\n    }\n\n    if (data === undefined) {\n      return null\n    }\n\n    return (\n      <span ref={ref} {...props}>\n        {data}\n      </span>\n    )\n  }\n)\n\nErc721OwnerOf.displayName = \"Erc721OwnerOf\"\n\nexport { Erc721OwnerOf }\n"
    }
  ],
  "folder": "erc721",
  "type": "components:buidl"
}