{
  "name": "erc721-owner-of",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "erc721-owner-of.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useContractRead } from \"wagmi\"\n\nimport { ErrorMessage } from \"@/registry/default/buidl/error-message\"\nimport { Skeleton } from \"@/registry/default/ui/skeleton\"\n\nconst erc721OwnerOfAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n] as const\n\nexport type Erc721OwnerOfProps = React.HTMLAttributes<HTMLDivElement> & {\n  address: `0x${string}`\n  tokenId: number | string | bigint\n  chainId?: number\n  displayLoading?: boolean\n  displayError?: boolean\n}\n\nconst Erc721OwnerOf = React.forwardRef<HTMLDivElement, Erc721OwnerOfProps>(\n  (\n    {\n      chainId,\n      address,\n      tokenId,\n      displayLoading = true,\n      displayError = true,\n      ...props\n    },\n    ref\n  ) => {\n    const { data, isLoading, isError, error } = useContractRead({\n      address,\n      abi: erc721OwnerOfAbi,\n      functionName: \"ownerOf\",\n      args: [BigInt(tokenId)],\n      chainId,\n    })\n\n    if (displayLoading && isLoading) {\n      return <Skeleton className=\"h-6 w-[420px]\" {...props} />\n    }\n\n    if (displayError && isError) {\n      return (\n        <ErrorMessage\n          defaultErrorMessage=\"Error while fetching ERC721 data\"\n          error={error}\n          {...props}\n        />\n      )\n    }\n\n    if (data === undefined) {\n      return null\n    }\n\n    return (\n      <div ref={ref} {...props}>\n        {data}\n      </div>\n    )\n  }\n)\n\nErc721OwnerOf.displayName = \"Erc721OwnerOf\"\n\nexport { Erc721OwnerOf }\n"
    }
  ],
  "folder": "erc721",
  "type": "components:buidl"
}