{
  "name": "balance",
  "dependencies": [
    "wagmi"
  ],
  "files": [
    {
      "name": "balance.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useAccount, useBalance, type Address } from \"wagmi\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Skeleton } from \"@/registry/default/ui/skeleton\"\n\ninterface BalanceProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n  address?: Address\n  chainId?: number\n  decimals?: number\n  displayLoading?: boolean\n  displayError?: boolean\n}\n\nfunction trimFormattedBalance(balance: string | undefined, decimals = 4) {\n  if (!balance) {\n    return \"0\"\n  }\n  const [integer, decimal] = balance.split(\".\")\n  if (!decimal) return integer\n\n  const trimmedDecimal = decimal.slice(0, decimals)\n  return `${integer}.${trimmedDecimal}`\n}\n\nconst ErrorMessage = ({ error }: { error: Error | null }) => {\n  return (\n    <div className={cn(\"break-words text-sm font-medium text-red-500\")}>\n      {error?.message ?? \"Error while fetching fee data\"}\n    </div>\n  )\n}\n\nconst Balance = React.forwardRef<HTMLDivElement, BalanceProps>(\n  (\n    {\n      address,\n      chainId,\n      className,\n      decimals = 4,\n      displayError = true,\n      displayLoading = true,\n      ...props\n    },\n    ref\n  ) => {\n    const { address: connectedAddress } = useAccount()\n\n    const selectedAddress = address ? address : connectedAddress\n\n    const { data, isLoading, isSuccess, isError, error } = useBalance({\n      chainId,\n      address: selectedAddress,\n    })\n\n    if ((isLoading && displayLoading) || !selectedAddress)\n      return <Skeleton className={cn(\"h-6 w-24\", className)} {...props} />\n\n    if (isError && displayError) return <ErrorMessage error={error} />\n\n    if (isSuccess) {\n      return (\n        <div ref={ref} className={className} {...props}>\n          {trimFormattedBalance(data?.formatted, decimals)}\n        </div>\n      )\n    }\n\n    return null\n  }\n)\n\nBalance.displayName = \"Balance\"\n\nexport { Balance }\n"
    }
  ],
  "type": "components:buidl"
}